/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */
package com.ctp;

import com.ctp.field.CThostFtdcAccountregisterField;
import com.ctp.field.CThostFtdcBatchOrderActionField;
import com.ctp.field.CThostFtdcBrokerTradingAlgosField;
import com.ctp.field.CThostFtdcBrokerTradingParamsField;
import com.ctp.field.CThostFtdcCFMMCTradingAccountKeyField;
import com.ctp.field.CThostFtdcCFMMCTradingAccountTokenField;
import com.ctp.field.CThostFtdcCancelAccountField;
import com.ctp.field.CThostFtdcChangeAccountField;
import com.ctp.field.CThostFtdcCombActionField;
import com.ctp.field.CThostFtdcCombInstrumentGuardField;
import com.ctp.field.CThostFtdcContractBankField;
import com.ctp.field.CThostFtdcDepthMarketDataField;
import com.ctp.field.CThostFtdcEWarrantOffsetField;
import com.ctp.field.CThostFtdcErrorConditionalOrderField;
import com.ctp.field.CThostFtdcExchangeField;
import com.ctp.field.CThostFtdcExchangeMarginRateAdjustField;
import com.ctp.field.CThostFtdcExchangeMarginRateField;
import com.ctp.field.CThostFtdcExchangeRateField;
import com.ctp.field.CThostFtdcExecOrderActionField;
import com.ctp.field.CThostFtdcExecOrderField;
import com.ctp.field.CThostFtdcForQuoteField;
import com.ctp.field.CThostFtdcForQuoteRspField;
import com.ctp.field.CThostFtdcInputBatchOrderActionField;
import com.ctp.field.CThostFtdcInputCombActionField;
import com.ctp.field.CThostFtdcInputExecOrderActionField;
import com.ctp.field.CThostFtdcInputExecOrderField;
import com.ctp.field.CThostFtdcInputForQuoteField;
import com.ctp.field.CThostFtdcInputOrderActionField;
import com.ctp.field.CThostFtdcInputOrderField;
import com.ctp.field.CThostFtdcInputQuoteActionField;
import com.ctp.field.CThostFtdcInputQuoteField;
import com.ctp.field.CThostFtdcInstrumentCommissionRateField;
import com.ctp.field.CThostFtdcInstrumentField;
import com.ctp.field.CThostFtdcInstrumentMarginRateField;
import com.ctp.field.CThostFtdcInstrumentStatusField;
import com.ctp.field.CThostFtdcInvestorField;
import com.ctp.field.CThostFtdcInvestorPositionCombineDetailField;
import com.ctp.field.CThostFtdcInvestorPositionDetailField;
import com.ctp.field.CThostFtdcInvestorPositionField;
import com.ctp.field.CThostFtdcInvestorProductGroupMarginField;
import com.ctp.field.CThostFtdcNoticeField;
import com.ctp.field.CThostFtdcNotifyQueryAccountField;
import com.ctp.field.CThostFtdcOpenAccountField;
import com.ctp.field.CThostFtdcOptionInstrCommRateField;
import com.ctp.field.CThostFtdcOptionInstrTradeCostField;
import com.ctp.field.CThostFtdcOrderActionField;
import com.ctp.field.CThostFtdcOrderField;
import com.ctp.field.CThostFtdcParkedOrderActionField;
import com.ctp.field.CThostFtdcParkedOrderField;
import com.ctp.field.CThostFtdcProductExchRateField;
import com.ctp.field.CThostFtdcProductField;
import com.ctp.field.CThostFtdcProductGroupField;
import com.ctp.field.CThostFtdcQueryCFMMCTradingAccountTokenField;
import com.ctp.field.CThostFtdcQueryMaxOrderVolumeField;
import com.ctp.field.CThostFtdcQuoteActionField;
import com.ctp.field.CThostFtdcQuoteField;
import com.ctp.field.CThostFtdcRemoveParkedOrderActionField;
import com.ctp.field.CThostFtdcRemoveParkedOrderField;
import com.ctp.field.CThostFtdcReqQueryAccountField;
import com.ctp.field.CThostFtdcReqRepealField;
import com.ctp.field.CThostFtdcReqTransferField;
import com.ctp.field.CThostFtdcRspAuthenticateField;
import com.ctp.field.CThostFtdcRspInfoField;
import com.ctp.field.CThostFtdcRspRepealField;
import com.ctp.field.CThostFtdcRspTransferField;
import com.ctp.field.CThostFtdcRspUserLoginField;
import com.ctp.field.CThostFtdcSecAgentACIDMapField;
import com.ctp.field.CThostFtdcSettlementInfoConfirmField;
import com.ctp.field.CThostFtdcSettlementInfoField;
import com.ctp.field.CThostFtdcTradeField;
import com.ctp.field.CThostFtdcTradingAccountField;
import com.ctp.field.CThostFtdcTradingAccountPasswordUpdateField;
import com.ctp.field.CThostFtdcTradingCodeField;
import com.ctp.field.CThostFtdcTradingNoticeField;
import com.ctp.field.CThostFtdcTradingNoticeInfoField;
import com.ctp.field.CThostFtdcTransferBankField;
import com.ctp.field.CThostFtdcTransferSerialField;
import com.ctp.field.CThostFtdcUserLogoutField;
import com.ctp.field.CThostFtdcUserPasswordUpdateField;
import com.ctp.swig.ctpJNI;

public class TraderSpi
{
	private transient long swigCPtr;
	protected transient boolean swigCMemOwn;

	protected TraderSpi(long cPtr, boolean cMemoryOwn)
	{
		swigCMemOwn = cMemoryOwn;
		swigCPtr = cPtr;
	}

	public static long getCPtr(TraderSpi obj)
	{
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	protected void finalize()
	{
		delete();
	}

	public synchronized void delete()
	{
		if (swigCPtr != 0)
		{
			if (swigCMemOwn)
			{
				swigCMemOwn = false;
				ctpJNI.delete_CThostFtdcTraderSpi(swigCPtr);
			}
			swigCPtr = 0;
		}
	}

	public void OnFrontConnected()
	{
		ctpJNI.CThostFtdcTraderSpi_OnFrontConnected(swigCPtr, this);
	}

	public void OnFrontDisconnected(int nReason)
	{
		ctpJNI.CThostFtdcTraderSpi_OnFrontDisconnected(swigCPtr, this, nReason);
	}

	public void OnHeartBeatWarning(int nTimeLapse)
	{
		ctpJNI.CThostFtdcTraderSpi_OnHeartBeatWarning(swigCPtr, this, nTimeLapse);
	}

	public void OnRspAuthenticate(CThostFtdcRspAuthenticateField pRspAuthenticateField, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspAuthenticate(swigCPtr, this,
				CThostFtdcRspAuthenticateField.getCPtr(pRspAuthenticateField), pRspAuthenticateField,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspUserLogin(CThostFtdcRspUserLoginField pRspUserLogin, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspUserLogin(swigCPtr, this, CThostFtdcRspUserLoginField.getCPtr(pRspUserLogin),
				pRspUserLogin, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspUserLogout(CThostFtdcUserLogoutField pUserLogout, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspUserLogout(swigCPtr, this, CThostFtdcUserLogoutField.getCPtr(pUserLogout),
				pUserLogout, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField pUserPasswordUpdate,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspUserPasswordUpdate(swigCPtr, this,
				CThostFtdcUserPasswordUpdateField.getCPtr(pUserPasswordUpdate), pUserPasswordUpdate,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspTradingAccountPasswordUpdate(
			CThostFtdcTradingAccountPasswordUpdateField pTradingAccountPasswordUpdate, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdate(swigCPtr, this,
				CThostFtdcTradingAccountPasswordUpdateField.getCPtr(pTradingAccountPasswordUpdate),
				pTradingAccountPasswordUpdate, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspOrderInsert(CThostFtdcInputOrderField pInputOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspOrderInsert(swigCPtr, this, CThostFtdcInputOrderField.getCPtr(pInputOrder),
				pInputOrder, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspParkedOrderInsert(CThostFtdcParkedOrderField pParkedOrder, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspParkedOrderInsert(swigCPtr, this,
				CThostFtdcParkedOrderField.getCPtr(pParkedOrder), pParkedOrder,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspParkedOrderAction(CThostFtdcParkedOrderActionField pParkedOrderAction,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspParkedOrderAction(swigCPtr, this,
				CThostFtdcParkedOrderActionField.getCPtr(pParkedOrderAction), pParkedOrderAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspOrderAction(CThostFtdcInputOrderActionField pInputOrderAction, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspOrderAction(swigCPtr, this,
				CThostFtdcInputOrderActionField.getCPtr(pInputOrderAction), pInputOrderAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQueryMaxOrderVolume(CThostFtdcQueryMaxOrderVolumeField pQueryMaxOrderVolume,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQueryMaxOrderVolume(swigCPtr, this,
				CThostFtdcQueryMaxOrderVolumeField.getCPtr(pQueryMaxOrderVolume), pQueryMaxOrderVolume,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField pSettlementInfoConfirm,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspSettlementInfoConfirm(swigCPtr, this,
				CThostFtdcSettlementInfoConfirmField.getCPtr(pSettlementInfoConfirm), pSettlementInfoConfirm,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField pRemoveParkedOrder,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspRemoveParkedOrder(swigCPtr, this,
				CThostFtdcRemoveParkedOrderField.getCPtr(pRemoveParkedOrder), pRemoveParkedOrder,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField pRemoveParkedOrderAction,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspRemoveParkedOrderAction(swigCPtr, this,
				CThostFtdcRemoveParkedOrderActionField.getCPtr(pRemoveParkedOrderAction), pRemoveParkedOrderAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspExecOrderInsert(CThostFtdcInputExecOrderField pInputExecOrder, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspExecOrderInsert(swigCPtr, this,
				CThostFtdcInputExecOrderField.getCPtr(pInputExecOrder), pInputExecOrder,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspExecOrderAction(CThostFtdcInputExecOrderActionField pInputExecOrderAction,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspExecOrderAction(swigCPtr, this,
				CThostFtdcInputExecOrderActionField.getCPtr(pInputExecOrderAction), pInputExecOrderAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspForQuoteInsert(CThostFtdcInputForQuoteField pInputForQuote, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspForQuoteInsert(swigCPtr, this,
				CThostFtdcInputForQuoteField.getCPtr(pInputForQuote), pInputForQuote,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQuoteInsert(CThostFtdcInputQuoteField pInputQuote, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQuoteInsert(swigCPtr, this, CThostFtdcInputQuoteField.getCPtr(pInputQuote),
				pInputQuote, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQuoteAction(CThostFtdcInputQuoteActionField pInputQuoteAction, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQuoteAction(swigCPtr, this,
				CThostFtdcInputQuoteActionField.getCPtr(pInputQuoteAction), pInputQuoteAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspBatchOrderAction(CThostFtdcInputBatchOrderActionField pInputBatchOrderAction,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspBatchOrderAction(swigCPtr, this,
				CThostFtdcInputBatchOrderActionField.getCPtr(pInputBatchOrderAction), pInputBatchOrderAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspCombActionInsert(CThostFtdcInputCombActionField pInputCombAction, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspCombActionInsert(swigCPtr, this,
				CThostFtdcInputCombActionField.getCPtr(pInputCombAction), pInputCombAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryOrder(CThostFtdcOrderField pOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryOrder(swigCPtr, this, CThostFtdcOrderField.getCPtr(pOrder), pOrder,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryTrade(CThostFtdcTradeField pTrade, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryTrade(swigCPtr, this, CThostFtdcTradeField.getCPtr(pTrade), pTrade,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryInvestorPosition(CThostFtdcInvestorPositionField pInvestorPosition,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryInvestorPosition(swigCPtr, this,
				CThostFtdcInvestorPositionField.getCPtr(pInvestorPosition), pInvestorPosition,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryTradingAccount(CThostFtdcTradingAccountField pTradingAccount, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryTradingAccount(swigCPtr, this,
				CThostFtdcTradingAccountField.getCPtr(pTradingAccount), pTradingAccount,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryInvestor(CThostFtdcInvestorField pInvestor, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryInvestor(swigCPtr, this, CThostFtdcInvestorField.getCPtr(pInvestor),
				pInvestor, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryTradingCode(CThostFtdcTradingCodeField pTradingCode, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryTradingCode(swigCPtr, this, CThostFtdcTradingCodeField.getCPtr(pTradingCode),
				pTradingCode, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField pInstrumentMarginRate,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryInstrumentMarginRate(swigCPtr, this,
				CThostFtdcInstrumentMarginRateField.getCPtr(pInstrumentMarginRate), pInstrumentMarginRate,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField pInstrumentCommissionRate,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRate(swigCPtr, this,
				CThostFtdcInstrumentCommissionRateField.getCPtr(pInstrumentCommissionRate), pInstrumentCommissionRate,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryExchange(CThostFtdcExchangeField pExchange, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryExchange(swigCPtr, this, CThostFtdcExchangeField.getCPtr(pExchange),
				pExchange, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryProduct(CThostFtdcProductField pProduct, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryProduct(swigCPtr, this, CThostFtdcProductField.getCPtr(pProduct), pProduct,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryInstrument(CThostFtdcInstrumentField pInstrument, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryInstrument(swigCPtr, this, CThostFtdcInstrumentField.getCPtr(pInstrument),
				pInstrument, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField pDepthMarketData,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryDepthMarketData(swigCPtr, this,
				CThostFtdcDepthMarketDataField.getCPtr(pDepthMarketData), pDepthMarketData,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQrySettlementInfo(CThostFtdcSettlementInfoField pSettlementInfo, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQrySettlementInfo(swigCPtr, this,
				CThostFtdcSettlementInfoField.getCPtr(pSettlementInfo), pSettlementInfo,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryTransferBank(CThostFtdcTransferBankField pTransferBank, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryTransferBank(swigCPtr, this,
				CThostFtdcTransferBankField.getCPtr(pTransferBank), pTransferBank,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField pInvestorPositionDetail,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryInvestorPositionDetail(swigCPtr, this,
				CThostFtdcInvestorPositionDetailField.getCPtr(pInvestorPositionDetail), pInvestorPositionDetail,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryNotice(CThostFtdcNoticeField pNotice, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryNotice(swigCPtr, this, CThostFtdcNoticeField.getCPtr(pNotice), pNotice,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField pSettlementInfoConfirm,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirm(swigCPtr, this,
				CThostFtdcSettlementInfoConfirmField.getCPtr(pSettlementInfoConfirm), pSettlementInfoConfirm,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryInvestorPositionCombineDetail(
			CThostFtdcInvestorPositionCombineDetailField pInvestorPositionCombineDetail,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetail(swigCPtr, this,
				CThostFtdcInvestorPositionCombineDetailField.getCPtr(pInvestorPositionCombineDetail),
				pInvestorPositionCombineDetail, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID,
				bIsLast);
	}

	public void OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField pCFMMCTradingAccountKey,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKey(swigCPtr, this,
				CThostFtdcCFMMCTradingAccountKeyField.getCPtr(pCFMMCTradingAccountKey), pCFMMCTradingAccountKey,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField pEWarrantOffset, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryEWarrantOffset(swigCPtr, this,
				CThostFtdcEWarrantOffsetField.getCPtr(pEWarrantOffset), pEWarrantOffset,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryInvestorProductGroupMargin(
			CThostFtdcInvestorProductGroupMarginField pInvestorProductGroupMargin, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMargin(swigCPtr, this,
				CThostFtdcInvestorProductGroupMarginField.getCPtr(pInvestorProductGroupMargin),
				pInvestorProductGroupMargin, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField pExchangeMarginRate,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryExchangeMarginRate(swigCPtr, this,
				CThostFtdcExchangeMarginRateField.getCPtr(pExchangeMarginRate), pExchangeMarginRate,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField pExchangeMarginRateAdjust,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjust(swigCPtr, this,
				CThostFtdcExchangeMarginRateAdjustField.getCPtr(pExchangeMarginRateAdjust), pExchangeMarginRateAdjust,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryExchangeRate(CThostFtdcExchangeRateField pExchangeRate, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryExchangeRate(swigCPtr, this,
				CThostFtdcExchangeRateField.getCPtr(pExchangeRate), pExchangeRate,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField pSecAgentACIDMap,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQrySecAgentACIDMap(swigCPtr, this,
				CThostFtdcSecAgentACIDMapField.getCPtr(pSecAgentACIDMap), pSecAgentACIDMap,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryProductExchRate(CThostFtdcProductExchRateField pProductExchRate,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryProductExchRate(swigCPtr, this,
				CThostFtdcProductExchRateField.getCPtr(pProductExchRate), pProductExchRate,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryProductGroup(CThostFtdcProductGroupField pProductGroup, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryProductGroup(swigCPtr, this,
				CThostFtdcProductGroupField.getCPtr(pProductGroup), pProductGroup,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField pOptionInstrTradeCost,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCost(swigCPtr, this,
				CThostFtdcOptionInstrTradeCostField.getCPtr(pOptionInstrTradeCost), pOptionInstrTradeCost,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField pOptionInstrCommRate,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryOptionInstrCommRate(swigCPtr, this,
				CThostFtdcOptionInstrCommRateField.getCPtr(pOptionInstrCommRate), pOptionInstrCommRate,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryExecOrder(CThostFtdcExecOrderField pExecOrder, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryExecOrder(swigCPtr, this, CThostFtdcExecOrderField.getCPtr(pExecOrder),
				pExecOrder, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryForQuote(CThostFtdcForQuoteField pForQuote, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryForQuote(swigCPtr, this, CThostFtdcForQuoteField.getCPtr(pForQuote),
				pForQuote, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryQuote(CThostFtdcQuoteField pQuote, CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryQuote(swigCPtr, this, CThostFtdcQuoteField.getCPtr(pQuote), pQuote,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField pCombInstrumentGuard,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryCombInstrumentGuard(swigCPtr, this,
				CThostFtdcCombInstrumentGuardField.getCPtr(pCombInstrumentGuard), pCombInstrumentGuard,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryCombAction(CThostFtdcCombActionField pCombAction, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryCombAction(swigCPtr, this, CThostFtdcCombActionField.getCPtr(pCombAction),
				pCombAction, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryTransferSerial(CThostFtdcTransferSerialField pTransferSerial, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryTransferSerial(swigCPtr, this,
				CThostFtdcTransferSerialField.getCPtr(pTransferSerial), pTransferSerial,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryAccountregister(CThostFtdcAccountregisterField pAccountregister,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryAccountregister(swigCPtr, this,
				CThostFtdcAccountregisterField.getCPtr(pAccountregister), pAccountregister,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspError(CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspError(swigCPtr, this, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo,
				nRequestID, bIsLast);
	}

	public void OnRtnOrder(CThostFtdcOrderField pOrder)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnOrder(swigCPtr, this, CThostFtdcOrderField.getCPtr(pOrder), pOrder);
	}

	public void OnRtnTrade(CThostFtdcTradeField pTrade)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnTrade(swigCPtr, this, CThostFtdcTradeField.getCPtr(pTrade), pTrade);
	}

	public void OnErrRtnOrderInsert(CThostFtdcInputOrderField pInputOrder, CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnOrderInsert(swigCPtr, this, CThostFtdcInputOrderField.getCPtr(pInputOrder),
				pInputOrder, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnErrRtnOrderAction(CThostFtdcOrderActionField pOrderAction, CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnOrderAction(swigCPtr, this, CThostFtdcOrderActionField.getCPtr(pOrderAction),
				pOrderAction, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField pInstrumentStatus)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnInstrumentStatus(swigCPtr, this,
				CThostFtdcInstrumentStatusField.getCPtr(pInstrumentStatus), pInstrumentStatus);
	}

	public void OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField pTradingNoticeInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnTradingNotice(swigCPtr, this,
				CThostFtdcTradingNoticeInfoField.getCPtr(pTradingNoticeInfo), pTradingNoticeInfo);
	}

	public void OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField pErrorConditionalOrder)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnErrorConditionalOrder(swigCPtr, this,
				CThostFtdcErrorConditionalOrderField.getCPtr(pErrorConditionalOrder), pErrorConditionalOrder);
	}

	public void OnRtnExecOrder(CThostFtdcExecOrderField pExecOrder)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnExecOrder(swigCPtr, this, CThostFtdcExecOrderField.getCPtr(pExecOrder),
				pExecOrder);
	}

	public void OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField pInputExecOrder, CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnExecOrderInsert(swigCPtr, this,
				CThostFtdcInputExecOrderField.getCPtr(pInputExecOrder), pInputExecOrder,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField pExecOrderAction,
			CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnExecOrderAction(swigCPtr, this,
				CThostFtdcExecOrderActionField.getCPtr(pExecOrderAction), pExecOrderAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField pInputForQuote, CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnForQuoteInsert(swigCPtr, this,
				CThostFtdcInputForQuoteField.getCPtr(pInputForQuote), pInputForQuote,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnRtnQuote(CThostFtdcQuoteField pQuote)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnQuote(swigCPtr, this, CThostFtdcQuoteField.getCPtr(pQuote), pQuote);
	}

	public void OnErrRtnQuoteInsert(CThostFtdcInputQuoteField pInputQuote, CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnQuoteInsert(swigCPtr, this, CThostFtdcInputQuoteField.getCPtr(pInputQuote),
				pInputQuote, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnErrRtnQuoteAction(CThostFtdcQuoteActionField pQuoteAction, CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnQuoteAction(swigCPtr, this, CThostFtdcQuoteActionField.getCPtr(pQuoteAction),
				pQuoteAction, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnRtnForQuoteRsp(CThostFtdcForQuoteRspField pForQuoteRsp)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnForQuoteRsp(swigCPtr, this, CThostFtdcForQuoteRspField.getCPtr(pForQuoteRsp),
				pForQuoteRsp);
	}

	public void OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField pCFMMCTradingAccountToken)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnCFMMCTradingAccountToken(swigCPtr, this,
				CThostFtdcCFMMCTradingAccountTokenField.getCPtr(pCFMMCTradingAccountToken), pCFMMCTradingAccountToken);
	}

	public void OnErrRtnBatchOrderAction(CThostFtdcBatchOrderActionField pBatchOrderAction,
			CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnBatchOrderAction(swigCPtr, this,
				CThostFtdcBatchOrderActionField.getCPtr(pBatchOrderAction), pBatchOrderAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnRtnCombAction(CThostFtdcCombActionField pCombAction)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnCombAction(swigCPtr, this, CThostFtdcCombActionField.getCPtr(pCombAction),
				pCombAction);
	}

	public void OnErrRtnCombActionInsert(CThostFtdcInputCombActionField pInputCombAction,
			CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnCombActionInsert(swigCPtr, this,
				CThostFtdcInputCombActionField.getCPtr(pInputCombAction), pInputCombAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnRspQryContractBank(CThostFtdcContractBankField pContractBank, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryContractBank(swigCPtr, this,
				CThostFtdcContractBankField.getCPtr(pContractBank), pContractBank,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryParkedOrder(CThostFtdcParkedOrderField pParkedOrder, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryParkedOrder(swigCPtr, this, CThostFtdcParkedOrderField.getCPtr(pParkedOrder),
				pParkedOrder, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField pParkedOrderAction,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryParkedOrderAction(swigCPtr, this,
				CThostFtdcParkedOrderActionField.getCPtr(pParkedOrderAction), pParkedOrderAction,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryTradingNotice(CThostFtdcTradingNoticeField pTradingNotice, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryTradingNotice(swigCPtr, this,
				CThostFtdcTradingNoticeField.getCPtr(pTradingNotice), pTradingNotice,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField pBrokerTradingParams,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryBrokerTradingParams(swigCPtr, this,
				CThostFtdcBrokerTradingParamsField.getCPtr(pBrokerTradingParams), pBrokerTradingParams,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField pBrokerTradingAlgos,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgos(swigCPtr, this,
				CThostFtdcBrokerTradingAlgosField.getCPtr(pBrokerTradingAlgos), pBrokerTradingAlgos,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQueryCFMMCTradingAccountToken(
			CThostFtdcQueryCFMMCTradingAccountTokenField pQueryCFMMCTradingAccountToken,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQueryCFMMCTradingAccountToken(swigCPtr, this,
				CThostFtdcQueryCFMMCTradingAccountTokenField.getCPtr(pQueryCFMMCTradingAccountToken),
				pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID,
				bIsLast);
	}

	public void OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField pRspTransfer)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnFromBankToFutureByBank(swigCPtr, this,
				CThostFtdcRspTransferField.getCPtr(pRspTransfer), pRspTransfer);
	}

	public void OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField pRspTransfer)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnFromFutureToBankByBank(swigCPtr, this,
				CThostFtdcRspTransferField.getCPtr(pRspTransfer), pRspTransfer);
	}

	public void OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField pRspRepeal)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBank(swigCPtr, this,
				CThostFtdcRspRepealField.getCPtr(pRspRepeal), pRspRepeal);
	}

	public void OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField pRspRepeal)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBank(swigCPtr, this,
				CThostFtdcRspRepealField.getCPtr(pRspRepeal), pRspRepeal);
	}

	public void OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField pRspTransfer)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnFromBankToFutureByFuture(swigCPtr, this,
				CThostFtdcRspTransferField.getCPtr(pRspTransfer), pRspTransfer);
	}

	public void OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField pRspTransfer)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnFromFutureToBankByFuture(swigCPtr, this,
				CThostFtdcRspTransferField.getCPtr(pRspTransfer), pRspTransfer);
	}

	public void OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField pRspRepeal)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManual(swigCPtr, this,
				CThostFtdcRspRepealField.getCPtr(pRspRepeal), pRspRepeal);
	}

	public void OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField pRspRepeal)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManual(swigCPtr, this,
				CThostFtdcRspRepealField.getCPtr(pRspRepeal), pRspRepeal);
	}

	public void OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField pNotifyQueryAccount)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFuture(swigCPtr, this,
				CThostFtdcNotifyQueryAccountField.getCPtr(pNotifyQueryAccount), pNotifyQueryAccount);
	}

	public void OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField pReqTransfer, CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnBankToFutureByFuture(swigCPtr, this,
				CThostFtdcReqTransferField.getCPtr(pReqTransfer), pReqTransfer,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField pReqTransfer, CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnFutureToBankByFuture(swigCPtr, this,
				CThostFtdcReqTransferField.getCPtr(pReqTransfer), pReqTransfer,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField pReqRepeal,
			CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManual(swigCPtr, this,
				CThostFtdcReqRepealField.getCPtr(pReqRepeal), pReqRepeal, CThostFtdcRspInfoField.getCPtr(pRspInfo),
				pRspInfo);
	}

	public void OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField pReqRepeal,
			CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManual(swigCPtr, this,
				CThostFtdcReqRepealField.getCPtr(pReqRepeal), pReqRepeal, CThostFtdcRspInfoField.getCPtr(pRspInfo),
				pRspInfo);
	}

	public void OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField pReqQueryAccount,
			CThostFtdcRspInfoField pRspInfo)
	{
		ctpJNI.CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFuture(swigCPtr, this,
				CThostFtdcReqQueryAccountField.getCPtr(pReqQueryAccount), pReqQueryAccount,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo);
	}

	public void OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField pRspRepeal)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFuture(swigCPtr, this,
				CThostFtdcRspRepealField.getCPtr(pRspRepeal), pRspRepeal);
	}

	public void OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField pRspRepeal)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFuture(swigCPtr, this,
				CThostFtdcRspRepealField.getCPtr(pRspRepeal), pRspRepeal);
	}

	public void OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField pReqTransfer, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspFromBankToFutureByFuture(swigCPtr, this,
				CThostFtdcReqTransferField.getCPtr(pReqTransfer), pReqTransfer,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField pReqTransfer, CThostFtdcRspInfoField pRspInfo,
			int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspFromFutureToBankByFuture(swigCPtr, this,
				CThostFtdcReqTransferField.getCPtr(pReqTransfer), pReqTransfer,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField pReqQueryAccount,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFuture(swigCPtr, this,
				CThostFtdcReqQueryAccountField.getCPtr(pReqQueryAccount), pReqQueryAccount,
				CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo, nRequestID, bIsLast);
	}

	public void OnRtnOpenAccountByBank(CThostFtdcOpenAccountField pOpenAccount)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnOpenAccountByBank(swigCPtr, this,
				CThostFtdcOpenAccountField.getCPtr(pOpenAccount), pOpenAccount);
	}

	public void OnRtnCancelAccountByBank(CThostFtdcCancelAccountField pCancelAccount)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnCancelAccountByBank(swigCPtr, this,
				CThostFtdcCancelAccountField.getCPtr(pCancelAccount), pCancelAccount);
	}

	public void OnRtnChangeAccountByBank(CThostFtdcChangeAccountField pChangeAccount)
	{
		ctpJNI.CThostFtdcTraderSpi_OnRtnChangeAccountByBank(swigCPtr, this,
				CThostFtdcChangeAccountField.getCPtr(pChangeAccount), pChangeAccount);
	}

	public TraderSpi()
	{
		this(ctpJNI.new_CThostFtdcTraderSpi(), true);
	}
}
