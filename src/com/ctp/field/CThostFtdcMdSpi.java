/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.ctp.field;

import com.ctp.CtpJNI;

public class CThostFtdcMdSpi {
	private long swigCPtr;
	protected boolean swigCMemOwn;

	protected CThostFtdcMdSpi(long cPtr, boolean cMemoryOwn) {
		swigCMemOwn = cMemoryOwn;
		swigCPtr = cPtr;
	}

	protected static long getCPtr(CThostFtdcMdSpi obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	protected void finalize() {
		delete();
	}

	public synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				CtpJNI.delete_CThostFtdcMdSpi(swigCPtr);
			}
			swigCPtr = 0;
		}
	}

	protected void swigDirectorDisconnect() {
		swigCMemOwn = false;
		delete();
	}

	public void swigReleaseOwnership() {
		swigCMemOwn = false;
		CtpJNI.CThostFtdcMdSpi_change_ownership(this, swigCPtr, false);
	}

	public void swigTakeOwnership() {
		swigCMemOwn = true;
		CtpJNI.CThostFtdcMdSpi_change_ownership(this, swigCPtr, true);
	}

	public void onFrontConnected() {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onFrontConnected(swigCPtr, this);
		else
			CtpJNI.CThostFtdcMdSpi_onFrontConnectedSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this);
	}

	public void onFrontDisconnected(int nReason) {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onFrontDisconnected(swigCPtr, this, nReason);
		else
			CtpJNI.CThostFtdcMdSpi_onFrontDisconnectedSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this, nReason);
	}

	public void onHeartBeatWarning(int nTimeLapse) {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onHeartBeatWarning(swigCPtr, this,
					nTimeLapse);
		else
			CtpJNI.CThostFtdcMdSpi_onHeartBeatWarningSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this, nTimeLapse);
	}

	public void onRspUserLogin(CThostFtdcRspUserLoginField pRspUserLogin,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast) {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onRspUserLogin(swigCPtr, this,
					CThostFtdcRspUserLoginField.getCPtr(pRspUserLogin),
					pRspUserLogin, CThostFtdcRspInfoField.getCPtr(pRspInfo),
					pRspInfo, nRequestID, bIsLast);
		else
			CtpJNI.CThostFtdcMdSpi_onRspUserLoginSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this,
					CThostFtdcRspUserLoginField.getCPtr(pRspUserLogin),
					pRspUserLogin, CThostFtdcRspInfoField.getCPtr(pRspInfo),
					pRspInfo, nRequestID, bIsLast);
	}

	public void onRspUserLogout(CThostFtdcUserLogoutField pUserLogout,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast) {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onRspUserLogout(swigCPtr, this,
					CThostFtdcUserLogoutField.getCPtr(pUserLogout),
					pUserLogout, CThostFtdcRspInfoField.getCPtr(pRspInfo),
					pRspInfo, nRequestID, bIsLast);
		else
			CtpJNI.CThostFtdcMdSpi_onRspUserLogoutSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this,
					CThostFtdcUserLogoutField.getCPtr(pUserLogout),
					pUserLogout, CThostFtdcRspInfoField.getCPtr(pRspInfo),
					pRspInfo, nRequestID, bIsLast);
	}

	public void onRspError(CThostFtdcRspInfoField pRspInfo, int nRequestID,
			boolean bIsLast) {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onRspError(swigCPtr, this,
					CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo,
					nRequestID, bIsLast);
		else
			CtpJNI.CThostFtdcMdSpi_onRspErrorSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this, CThostFtdcRspInfoField.getCPtr(pRspInfo),
					pRspInfo, nRequestID, bIsLast);
	}

	public void onRspSubMarketData(
			CThostFtdcSpecificInstrumentField pSpecificInstrument,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast) {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onRspSubMarketData(swigCPtr, this,
					CThostFtdcSpecificInstrumentField
							.getCPtr(pSpecificInstrument), pSpecificInstrument,
					CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo,
					nRequestID, bIsLast);
		else
			CtpJNI.CThostFtdcMdSpi_onRspSubMarketDataSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this, CThostFtdcSpecificInstrumentField
							.getCPtr(pSpecificInstrument), pSpecificInstrument,
					CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo,
					nRequestID, bIsLast);
	}

	public void onRspUnSubMarketData(
			CThostFtdcSpecificInstrumentField pSpecificInstrument,
			CThostFtdcRspInfoField pRspInfo, int nRequestID, boolean bIsLast) {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onRspUnSubMarketData(swigCPtr, this,
					CThostFtdcSpecificInstrumentField
							.getCPtr(pSpecificInstrument), pSpecificInstrument,
					CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo,
					nRequestID, bIsLast);
		else
			CtpJNI.CThostFtdcMdSpi_onRspUnSubMarketDataSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this, CThostFtdcSpecificInstrumentField
							.getCPtr(pSpecificInstrument), pSpecificInstrument,
					CThostFtdcRspInfoField.getCPtr(pRspInfo), pRspInfo,
					nRequestID, bIsLast);
	}

	public void onRtnDepthMarketData(
			CThostFtdcDepthMarketDataField pDepthMarketData) {
		if (getClass() == CThostFtdcMdSpi.class)
			CtpJNI.CThostFtdcMdSpi_onRtnDepthMarketData(swigCPtr, this,
					CThostFtdcDepthMarketDataField.getCPtr(pDepthMarketData),
					pDepthMarketData);
		else
			CtpJNI.CThostFtdcMdSpi_onRtnDepthMarketDataSwigExplicitCThostFtdcMdSpi(
					swigCPtr, this,
					CThostFtdcDepthMarketDataField.getCPtr(pDepthMarketData),
					pDepthMarketData);
	}

	public CThostFtdcMdSpi() {
		this(CtpJNI.new_CThostFtdcMdSpi(), true);
		CtpJNI.CThostFtdcMdSpi_director_connect(this, swigCPtr, swigCMemOwn,
				true);
	}

}
